# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NZ4HzzFihTbRygFwyJ5GGuA3dBAuulbB

# ¬øTus h√°bitos afectan tu nota final? üß†

## Introducci√≥n üìå

En el √°mbito acad√©mico, el rendimiento estudiantil se eval√∫a com√∫nmente mediante las calificaciones obtenidas; sin embargo, estos indicadores num√©ricos no reflejan en su totalidad los factores que inciden en el desempe√±o. M√°s all√° del dominio del contenido curricular y las capacidades cognitivas, los h√°bitos cotidianos pueden influir de manera significativa en los resultados acad√©micos. Variables como las horas dedicadas al estudio, el uso de redes sociales, la calidad del sue√±o, la alimentaci√≥n y el estado de salud mental forman parte de la rutina diaria de los estudiantes y pueden estar asociadas, positiva o negativamente, con su rendimiento acad√©mico.

La comprensi√≥n de estas relaciones resulta esencial no solo para los propios estudiantes que buscan mejorar su desempe√±o, sino tambi√©n para educadores, instituciones y responsables de pol√≠ticas educativas interesados en promover entornos de aprendizaje m√°s eficaces y saludables.

El presente estudio se propone analizar y determinar cu√°les h√°bitos tienen un mayor impacto en el rendimiento acad√©mico.

## Sobre el dataset üìÅ

Este proyecto emplea un conjunto de datos simulado pero realista, denominado ‚ÄúStudent Habits vs Academic Performance‚Äù, que comprende 1,000 registros de estudiantes y m√°s de 15 variables relacionadas con h√°bitos de vida diarios y caracter√≠sticas personales. Entre las variables m√°s relevantes se encuentran:

- Horas diarias dedicadas al estudio, sue√±o y uso de redes sociales.

- Tiempo promedio diario destinado a plataformas de streaming como Netflix.

- Calidad de la dieta y estado de salud mental autoinformados.

- Porcentaje de asistencia a clases.

- Condici√≥n de empleo a medio tiempo.

- Nota final del examen, utilizada como indicador del rendimiento acad√©mico.

Este conjunto de datos resulta id√≥neo para realizar an√°lisis exploratorios, generar visualizaciones descriptivas y desarrollar modelos predictivos sencillos, con el objetivo de esclarecer la influencia de los h√°bitos cotidianos en el desempe√±o acad√©mico.
"""

import kagglehub

# Download latest version
path = kagglehub.dataset_download("jayaantanaath/student-habits-vs-academic-performance")

print("Path to dataset files:", path)

"""## Carga y descripci√≥n de los datos üì•

En esta secci√≥n se carga el dataset descargado desde KaggleHub y se realiza una inspecci√≥n general. Se revisan las dimensiones, tipos de variables, valores faltantes y estad√≠sticas b√°sicas. Esto permite comprender la estructura del conjunto de datos y preparar el terreno para el an√°lisis exploratorio posterior.
"""

# Importar librer√≠as
import pandas as pd
import numpy as np

# Cargar dataset desde la ruta conocida
dataset_path = "/kaggle/input/student-habits-vs-academic-performance/student_habits_performance.csv"
df = pd.read_csv(dataset_path)

# Mostrar las primeras filas
display(df.head())

# Dimensiones del dataset
print(f"Dimensiones: {df.shape}")

# Informaci√≥n general sobre columnas y tipos de datos
df.info()

# Estad√≠sticas descriptivas generales (num√©ricas y categ√≥ricas)
display(df.describe(include='all').T)

"""### An√°lisis inicial del dataset

A continuaci√≥n, se detallan las principales observaciones obtenidas tras la carga e inspecci√≥n preliminar del conjunto de datos:

- Dimensiones: El conjunto de datos est√° compuesto por 1,000 registros y 16 variables.

- Tipos de variables: Se identifican 9 variables num√©ricas (tipos int64 y float64) y 7 variables categ√≥ricas (tipo object).

- Valores faltantes: √önicamente la variable parental_education_level presenta valores nulos, con 91 registros incompletos, lo que representa el 9.1% del total.

- Identificador √∫nico: La variable student_id contiene valores √∫nicos para cada observaci√≥n, sin aportar valor anal√≠tico relevante, por lo que puede considerarse para exclusi√≥n en etapas posteriores del an√°lisis.

- Estad√≠sticas descriptivas destacadas:

 - age: edad media de aproximadamente 20.5 a√±os, con un rango de 17 a 24 a√±os.

 - study_hours_per_day: promedio de 3.55 horas diarias, con un m√°ximo de 8.3 horas.

 - social_media_hours: promedio de 2.5 horas diarias en redes sociales.

 - attendance_percentage: promedio de asistencia del 84.13%, con un m√≠nimo del 56%.

 - sleep_hours: promedio de 6.47 horas diarias de sue√±o.

 - exam_score: puntuaci√≥n media de 69.6, con una desviaci√≥n est√°ndar de aproximadamente 16.89.

- Distribuci√≥n de variables categ√≥ricas relevantes:

 - gender: tres categor√≠as, con predominio del g√©nero femenino (481 registros).

 - part_time_job: la mayor√≠a de los estudiantes no cuenta con un trabajo de medio tiempo (785 registros con la categor√≠a "No").

 - diet_quality: la categor√≠a m√°s frecuente es "Fair" (437 registros).

 - internet_quality: la categor√≠a "Good" es la m√°s com√∫n (447 registros).

 - extracurricular_participation: la mayor√≠a no participa en actividades extracurriculares (682 registros con la categor√≠a "No").

Este an√°lisis preliminar proporciona una visi√≥n general de la estructura del conjunto de datos, identificando elementos clave para el an√°lisis exploratorio posterior, como la presencia de valores nulos y la posible irrelevancia de ciertas variables.

### Limpieza inicial

Verificamos la presencia de valores nulos o duplicados y realizamos ajustes en los formatos de las columnas categ√≥ricas, como la estandarizaci√≥n del texto.
"""

# Verificar valores nulos
print("Valores nulos por columna:")
print(df.isnull().sum())

# Verificar duplicados
print(f"Duplicados en el dataset: {df.duplicated().sum()}")

# Ejemplo de limpieza sencilla: capitalizar valores categ√≥ricos
df['gender'] = df['gender'].str.capitalize()
df['diet_quality'] = df['diet_quality'].str.capitalize()
df['part_time_job'] = df['part_time_job'].str.capitalize()
df['exercise_frequency'] = df['exercise_frequency'].astype(str)  # Si quieres convertir a num m√°s adelante, se puede

# Revisar valores √∫nicos para validar limpieza
print("Valores √∫nicos en 'gender':", df['gender'].unique())
print("Valores √∫nicos en 'diet_quality':", df['diet_quality'].unique())
print("Valores √∫nicos en 'part_time_job':", df['part_time_job'].unique())

"""### Calidad de los datos

Se realiz√≥ una revisi√≥n espec√≠fica para detectar valores nulos, duplicados y distribuci√≥n de categor√≠as en algunas variables clave:

Valores nulos por columna:
- Solo la variable `parental_education_level` contiene valores nulos: **91 registros** (9.1% del total).
- El resto de las columnas no presentan datos faltantes.

Duplicados:
- No se encontraron registros duplicados en el dataset (**0 duplicados**).

Distribuci√≥n de valores √∫nicos:

- `gender`: 3 categor√≠as ‚Üí **['Female', 'Male', 'Other']**
- `diet_quality`: 3 categor√≠as ‚Üí **['Fair', 'Good', 'Poor']**
- `part_time_job`: 2 categor√≠as ‚Üí **['No', 'Yes']**

Esta inspecci√≥n confirma que el dataset tiene buena calidad general. Solo se requiere imputar los valores nulos en `parental_education_level`, y se recomienda mantener las categor√≠as existentes sin necesidad de recodificaci√≥n por ahora.

## An√°lisis Exploratorio de Datos (EDA) üîç

Antes de construir modelos predictivos o sacar conclusiones, es fundamental entender la estructura y las relaciones dentro de los datos. En esta secci√≥n exploraremos c√≥mo se distribuyen las variables m√°s relevantes y c√≥mo se relacionan con la nota final.

Primero, observaremos la distribuci√≥n de la variable objetivo, que es la nota final en el examen. Esto nos permitir√° identificar si la mayor√≠a de los estudiantes obtiene notas altas, bajas o una mezcla balanceada.

Luego, exploraremos la relaci√≥n entre algunas variables num√©ricas clave, como las horas de estudio, horas de sue√±o, tiempo dedicado a redes sociales y la asistencia a clases, para observar posibles patrones o correlaciones con el rendimiento acad√©mico.

Finalmente, analizaremos algunas variables categ√≥ricas, como la calidad de la dieta, para evaluar c√≥mo estas pueden influir en las calificaciones.

Este an√°lisis nos dar√° una primera visi√≥n sobre qu√© factores pueden ser importantes para predecir el desempe√±o acad√©mico y qu√© h√°bitos podr√≠an estar relacionados con mejores o peores resultados.

### Distribuciones
"""

import matplotlib.pyplot as plt
import seaborn as sns

sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (12, 8)

num_vars = [
    'study_hours_per_day', 'sleep_hours', 'social_media_hours', 'netflix_hours',
    'exercise_frequency', 'mental_health_rating', 'attendance_percentage', 'exam_score'
]

for var in num_vars:
    plt.figure()
    sns.histplot(df[var], bins=30, kde=True, color='skyblue')
    plt.title(f'Distribuci√≥n de {var.replace("_", " ").capitalize()}')
    plt.xlabel(var.replace("_", " ").capitalize())
    plt.ylabel('Cantidad de estudiantes')
    plt.show()

"""### Correlaciones"""

import seaborn as sns
import matplotlib.pyplot as plt

# Variables num√©ricas relevantes para correlacionar con la nota final
variables_num = [
    'study_hours_per_day', 'sleep_hours', 'social_media_hours', 'netflix_hours',
    'attendance_percentage', 'exercise_frequency', 'mental_health_rating', 'exam_score'
]

# Calcular matriz de correlaci√≥n
corr_matrix = df[variables_num].corr()

# Mostrar correlaciones de todas con exam_score
print("Correlaciones con exam_score:")
print(corr_matrix['exam_score'].sort_values(ascending=False))

# Visualizaci√≥n de matriz de correlaci√≥n
plt.figure(figsize=(9,7))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Matriz de correlaci√≥n entre h√°bitos y nota final (exam_score)')
plt.show()

"""An√°lisis de correlaciones con la puntuaci√≥n en el examen (`exam_score`)

Se realiz√≥ un an√°lisis de correlaci√≥n para identificar la relaci√≥n entre distintas variables y el puntaje obtenido en el examen (`exam_score`). Los resultados son los siguientes:

- **Horas de estudio por d√≠a (`study_hours_per_day`)**: Presenta la correlaci√≥n m√°s alta y positiva con la puntuaci√≥n del examen (r = 0.83). Esto indica que a mayor dedicaci√≥n diaria al estudio, mayor es el rendimiento acad√©mico, mostrando una relaci√≥n fuerte y directa.

- **Calificaci√≥n de salud mental (`mental_health_rating`)**: Muestra una correlaci√≥n moderada y positiva (r = 0.32) con el puntaje en el examen. Esto sugiere que un mejor estado de salud mental est√° asociado con mejores resultados acad√©micos, aunque con un impacto menor en comparaci√≥n con las horas de estudio.

- **Frecuencia de ejercicio (`exercise_frequency`)** y **horas de sue√±o (`sleep_hours`)**: Ambas variables presentan correlaciones positivas bajas (r = 0.16 y r = 0.12, respectivamente), lo que indica que aunque la actividad f√≠sica y el descanso pueden influir positivamente en el rendimiento acad√©mico, su efecto es limitado.

- **Porcentaje de asistencia (`attendance_percentage`)**: Tiene una correlaci√≥n baja y positiva (r = 0.09)**_**

### Distribuciones por niveles
"""

import matplotlib.pyplot as plt
import seaborn as sns

sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (12, 6)

# Nota final por g√©nero
plt.figure()
sns.boxplot(x='gender', y='exam_score', data=df, palette='pastel')
plt.title('Distribuci√≥n de notas finales por g√©nero')
plt.xlabel('G√©nero')
plt.ylabel('Nota final')
plt.show()

# Nota final por calidad de dieta
plt.figure()
sns.boxplot(x='diet_quality', y='exam_score', data=df, palette='Set2')
plt.title('Distribuci√≥n de notas finales por calidad de dieta')
plt.xlabel('Calidad de dieta')
plt.ylabel('Nota final')
plt.show()

# Nota final por nivel de salud mental (mental_health_rating)
plt.figure()
sns.boxplot(x='mental_health_rating', y='exam_score', data=df, palette='coolwarm')
plt.title('Distribuci√≥n de notas finales por salud mental')
plt.xlabel('Salud mental (rating)')
plt.ylabel('Nota final')
plt.show()

# Crear categor√≠a de grupos de edad
bins = [16, 18, 20, 22, 24, 26]
labels = ['16-18', '19-20', '21-22', '23-24', '25+']
df['age_group'] = pd.cut(df['age'], bins=bins, labels=labels, right=False)

# Boxplot de nota final por grupo de edad
plt.figure()
sns.boxplot(x='age_group', y='exam_score', data=df, palette='magma')
plt.title('Distribuci√≥n de notas finales por grupo de edad')
plt.xlabel('Grupo de edad')
plt.ylabel('Nota final')
plt.show()

categorical_vars = ['part_time_job', 'parental_education_level', 'internet_quality', 'extracurricular_participation']

for var in categorical_vars:
    plt.figure()
    sns.boxplot(x=var, y='exam_score', data=df, palette='Set3')
    plt.title(f'Nota final seg√∫n {var.replace("_", " ").capitalize()}')
    plt.xlabel(var.replace("_", " ").capitalize())
    plt.ylabel('Nota final')
    plt.xticks(rotation=45)
    plt.show()

"""## Visualizaci√≥n de patrones üß©

En este apartado exploramos visualmente c√≥mo ciertos h√°bitos de los estudiantes se relacionan con su desempe√±o acad√©mico.
"""

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (10, 6)

# 1. Relaci√≥n horas de estudio vs nota con suavizado (regresi√≥n local)
plt.figure()
sns.scatterplot(x='study_hours_per_day', y='exam_score', data=df, alpha=0.6)
sns.regplot(x='study_hours_per_day', y='exam_score', data=df, scatter=False, lowess=True, color='red')
plt.title('Relaci√≥n entre horas de estudio diario y nota final')
plt.xlabel('Horas de estudio por d√≠a')
plt.ylabel('Nota final')
plt.show()

# 2. Relaci√≥n horas de sue√±o vs nota con suavizado
plt.figure()
sns.scatterplot(x='sleep_hours', y='exam_score', data=df, alpha=0.6)
sns.regplot(x='sleep_hours', y='exam_score', data=df, scatter=False, lowess=True, color='green')
plt.title('Relaci√≥n entre horas de sue√±o y nota final')
plt.xlabel('Horas de sue√±o por d√≠a')
plt.ylabel('Nota final')
plt.show()

# 3. Impacto de redes sociales y Netflix en nota (gr√°ficos separados)
fig, axes = plt.subplots(1, 2, figsize=(14,6))

sns.scatterplot(x='social_media_hours', y='exam_score', data=df, alpha=0.6, ax=axes[0], color='purple')
sns.regplot(x='social_media_hours', y='exam_score', data=df, scatter=False, lowess=True, color='red', ax=axes[0])
axes[0].set_title('Horas en redes sociales vs Nota final')
axes[0].set_xlabel('Horas en redes sociales')
axes[0].set_ylabel('Nota final')

sns.scatterplot(x='netflix_hours', y='exam_score', data=df, alpha=0.6, ax=axes[1], color='orange')
sns.regplot(x='netflix_hours', y='exam_score', data=df, scatter=False, lowess=True, color='red', ax=axes[1])
axes[1].set_title('Horas en Netflix vs Nota final')
axes[1].set_xlabel('Horas en Netflix')
axes[1].set_ylabel('Nota final')

plt.tight_layout()
plt.show()

import plotly.express as px

fig = px.scatter_3d(df,
                    x='study_hours_per_day',
                    y='sleep_hours',
                    z='exam_score',
                    color='mental_health_rating',
                    labels={
                        'study_hours_per_day': 'Horas de estudio por d√≠a',
                        'sleep_hours': 'Horas de sue√±o por d√≠a',
                        'exam_score': 'Nota final',
                        'mental_health_rating': 'Salud mental'
                    },
                    title='Interacci√≥n entre estudio, sue√±o, salud mental y nota final',
                    opacity=0.7)

fig.show()

"""## Modelo Predictivo Simple üß∑

Para entender mejor qu√© h√°bitos y caracter√≠sticas influyen en la nota final, construimos modelos predictivos simples: una regresi√≥n lineal y un √°rbol de decisi√≥n. Esto nos permitir√° cuantificar la importancia relativa de cada variable y observar qu√© factores predicen mejor el desempe√±o acad√©mico.

Preparaci√≥n de datos
Se codifican las variables categ√≥ricas y se seleccionan las variables predictoras m√°s relevantes para el modelo.

### Modelo 1: Regresi√≥n lineal
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
import numpy as np

# Variables predictoras
features = ['study_hours_per_day', 'sleep_hours', 'social_media_hours', 'netflix_hours',
            'exercise_frequency', 'attendance_percentage', 'mental_health_rating',
            'part_time_job', 'diet_quality']

X = df[features]
y = df['exam_score']

# Categ√≥ricas para OneHotEncoding
categorical_features = ['part_time_job', 'diet_quality']
numerical_features = list(set(features) - set(categorical_features))

# Pipeline para preprocesamiento
preprocessor = ColumnTransformer(
    transformers=[
        ('cat', OneHotEncoder(drop='first'), categorical_features),
    ], remainder='passthrough')

# Separar en train/test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear pipeline de regresi√≥n lineal
pipeline_lr = Pipeline(steps=[('preprocessor', preprocessor),
                              ('regressor', LinearRegression())])

# Entrenar modelo
pipeline_lr.fit(X_train, y_train)

# Predecir y evaluar
y_pred = pipeline_lr.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
print(f'RMSE: {rmse:.2f}')
print(f'R2 score: {r2_score(y_test, y_pred):.2f}')

# Obtener nombres de las columnas transformadas
encoded_cat_features = pipeline_lr.named_steps['preprocessor'].transformers_[0][1].get_feature_names_out(categorical_features)
all_features = list(encoded_cat_features) + numerical_features

# Obtener coeficientes
coefs = pipeline_lr.named_steps['regressor'].coef_

# Crear dataframe con coeficientes y caracter√≠sticas
coef_df = pd.DataFrame({'feature': all_features, 'coef': coefs})
coef_df['abs_coef'] = coef_df['coef'].abs()
coef_df = coef_df.sort_values(by='abs_coef', ascending=False).drop(columns='abs_coef')

print(coef_df)

"""El modelo tiene un rendimiento muy bueno, con un R¬≤ de 0.90, lo que indica que explica el 90% de la variabilidad en las notas de examen. El error promedio en las predicciones, medido por el RMSE, es de 5.12 puntos.

Entre las variables m√°s influyentes, la asistencia a clases (`attendance_percentage`) tiene el coeficiente m√°s alto y positivo (9.53), mostrando que es el factor que m√°s contribuye a mejorar la nota.

Por otro lado, la frecuencia de ejercicio y las horas dedicadas a redes sociales tienen coeficientes negativos (-2.70 y -2.32), lo que indica que un aumento en estas variables se asocia con una disminuci√≥n en la nota prevista.

Variables como las horas de estudio y de Netflix tambi√©n tienen un efecto positivo, aunque menor.

Las variables categ√≥ricas `diet_quality` y `part_time_job` muestran coeficientes menores, sugiriendo un impacto menos relevante en la predicci√≥n del rendimiento acad√©mico.

En resumen, la asistencia es el factor clave, mientras que ciertas actividades o h√°bitos pueden estar asociados con una baja en el desempe√±o acad√©mico seg√∫n el modelo.

### Modelo 2: √Årbol de decisi√≥n para regresi√≥n
"""

from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import OrdinalEncoder
import numpy as np
import pandas as pd

# Codificar variables categ√≥ricas con OrdinalEncoder
X2 = X.copy()
X2[categorical_features] = OrdinalEncoder().fit_transform(X2[categorical_features])

# Separar train/test
X_train2, X_test2, y_train2, y_test2 = train_test_split(X2, y, test_size=0.2, random_state=42)

# Crear y entrenar √°rbol de decisi√≥n
tree_reg = DecisionTreeRegressor(random_state=42, max_depth=5)
tree_reg.fit(X_train2, y_train2)

# Predecir y evaluar
y_pred2 = tree_reg.predict(X_test2)
mse_tree = mean_squared_error(y_test2, y_pred2)
rmse_tree = np.sqrt(mse_tree)
print(f'RMSE √°rbol: {rmse_tree:.2f}')
print(f'R2 √°rbol: {r2_score(y_test2, y_pred2):.2f}')

# Importancia de variables
importances = tree_reg.feature_importances_
feat_imp = pd.DataFrame({'feature': X2.columns, 'importance': importances})
feat_imp = feat_imp.sort_values(by='importance', ascending=False)
print(feat_imp)

"""El modelo de √°rbol de decisi√≥n muestra un rendimiento inferior al modelo lineal, con un RMSE de 8.89 y un R¬≤ de 0.69, lo que indica que explica aproximadamente el 69% de la variabilidad en las notas.

La caracter√≠stica m√°s importante para el √°rbol es el n√∫mero de horas de estudio por d√≠a (`study_hours_per_day`), con una importancia muy alta (81.9%), dominando el impacto en las predicciones.

Otras variables como la salud mental (`mental_health_rating`) tienen menor pero significativa relevancia (11.35%), mientras que el resto de variables aportan muy poco o nada al modelo.

Las variables categ√≥ricas `part_time_job` y `diet_quality` no influyen en este modelo, ya que su importancia es cero.

En resumen, el √°rbol prioriza principalmente las horas de estudio y, en menor medida, la salud mental para predecir la nota, descartando el impacto de otros factores que el modelo lineal s√≠ considera relevantes.

### Gr√°fica con importancia de variables (regresi√≥n lineal y √°rbol)
"""

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Importancia regresi√≥n lineal (coeficientes absolutos)
coef_df['abs_coef'] = coef_df['coef'].abs()

plt.figure(figsize=(12,6))

# Barra coeficientes regresi√≥n lineal
plt.subplot(1,2,1)
sns.barplot(data=coef_df.sort_values('abs_coef', ascending=False), x='abs_coef', y='feature', palette='Blues_d')
plt.title('Importancia variables - Regresi√≥n Lineal (|coef|)')
plt.xlabel('Valor absoluto del coeficiente')
plt.ylabel('Variable')

# Importancia √°rbol de decisi√≥n
plt.subplot(1,2,2)
sns.barplot(data=feat_imp, x='importance', y='feature', palette='Greens_d')
plt.title('Importancia variables - √Årbol de Decisi√≥n')
plt.xlabel('Importancia')
plt.ylabel('Variable')

plt.tight_layout()
plt.show()

# Variables num√©ricas dentro de features
numeric_features = ['study_hours_per_day', 'sleep_hours', 'social_media_hours', 'netflix_hours',
                    'exercise_frequency', 'attendance_percentage', 'mental_health_rating']

corr_matrix = df[numeric_features + ['exam_score']].corr()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10,8))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', center=0)
plt.title('Matriz de correlaci√≥n variables num√©ricas y nota final')
plt.show()

"""## Interacciones relevantes: üîÑ

### Interacci√≥n entre horas de sue√±o y salud mental
"""

import statsmodels.formula.api as smf

# Modelo lineal: salud mental en funci√≥n de horas de sue√±o
model = smf.ols('mental_health_rating ~ sleep_hours', data=df).fit()
print(model.summary())

import seaborn as sns
import matplotlib.pyplot as plt

sns.regplot(x='sleep_hours', y='mental_health_rating', data=df, scatter_kws={'alpha':0.5})
plt.title("Relaci√≥n entre horas de sue√±o y salud mental")
plt.xlabel("Horas de sue√±o por d√≠a")
plt.ylabel("Calificaci√≥n de salud mental")
plt.show()

import pandas as pd
import statsmodels.formula.api as smf

# Crear grupo de salud mental basado en el rating num√©rico
# Supongamos: Bajo (1-3), Medio (4-6), Alto (7-10)
def clasificar_salud_mental(rating):
    if rating <= 3:
        return 'Bajo'
    elif rating <= 6:
        return 'Medio'
    else:
        return 'Alto'

df['mental_health_group'] = df['mental_health_rating'].apply(clasificar_salud_mental)

# Convertir a categor√≠a ordenada
df['mental_health_group'] = pd.Categorical(df['mental_health_group'],
                                            categories=['Bajo', 'Medio', 'Alto'],
                                            ordered=True)

# Modelo con interacci√≥n entre salud mental y horas de sue√±o
model_sleep = smf.ols('exam_score ~ sleep_hours * mental_health_group', data=df).fit()

# Ver resumen
print(model_sleep.summary())

import seaborn as sns
import matplotlib.pyplot as plt

sns.lmplot(x='sleep_hours', y='exam_score', hue='mental_health_group', data=df, height=6, aspect=1.5)
plt.title('Relaci√≥n entre horas de sue√±o y nota final seg√∫n salud mental')
plt.xlabel('Horas de sue√±o')
plt.ylabel('Nota final')
plt.show()

"""Conclusi√≥n sobre la interacci√≥n entre horas de sue√±o y salud mental

Los resultados del modelo de regresi√≥n lineal simple muestran que las horas de sue√±o no tienen un efecto significativo sobre la calificaci√≥n de salud mental (`mental_health_rating`). El coeficiente estimado para `sleep_hours` es cercano a cero (-0.0151) y la prueba de significancia (p = 0.837) indica que esta variable no explica variabilidad relevante en la salud mental de los participantes. Esto se refleja en un R-cuadrado pr√°cticamente nulo (0.000), evidenciando que las horas de sue√±o por s√≠ solas no predicen la salud mental en esta muestra.

Por otro lado, al considerar un modelo m√°s complejo que incluye la interacci√≥n entre horas de sue√±o y grupos de salud mental para predecir la nota del examen (`exam_score`), observamos que aunque las horas de sue√±o presentan una relaci√≥n positiva con la nota (coeficiente = 1.3553, p = 0.064), las interacciones con los distintos niveles de salud mental no son significativas. Esto sugiere que, en este conjunto de datos, las horas de sue√±o pueden tener un efecto moderadamente positivo en el rendimiento acad√©mico, independiente del nivel de salud mental reportado, pero no existe evidencia clara de que la salud mental modere dicha relaci√≥n.

En resumen, la evidencia estad√≠stica indica que las horas de sue√±o, consideradas junto con la salud mental, no muestran una interacci√≥n significativa para explicar la variabilidad en la nota final. Por tanto, otros factores podr√≠an ser m√°s determinantes en la relaci√≥n entre h√°bitos de sue√±o, salud mental y desempe√±o acad√©mico en esta poblaci√≥n.

### Interacci√≥n entre horas de estudio y salud mental
"""

import statsmodels.formula.api as smf

# Modelo lineal: salud mental en funci√≥n de horas de sue√±o
model = smf.ols('mental_health_rating ~ sleep_hours', data=df).fit()
print(model.summary())

import seaborn as sns
import matplotlib.pyplot as plt

sns.regplot(x='study_hours_per_day', y='mental_health_rating', data=df, scatter_kws={'alpha':0.5})
plt.title("Relaci√≥n entre horas de estudio y salud mental")
plt.xlabel("Horas de estudio por d√≠a")
plt.ylabel("Calificaci√≥n de salud mental")
plt.show()

import statsmodels.formula.api as smf

# Crear variable categ√≥rica para salud mental
df['mental_health_group'] = pd.Categorical(df['mental_health_group'], categories=['Bajo','Medio','Alto'], ordered=True)

# Modelo con interacci√≥n entre horas de estudio y salud mental
model = smf.ols('exam_score ~ study_hours_per_day * mental_health_group', data=df).fit()

print(model.summary())

import seaborn as sns
import matplotlib.pyplot as plt

sns.lmplot(x='study_hours_per_day', y='exam_score', hue='mental_health_group', data=df, height=6, aspect=1.5)
plt.title('Relaci√≥n entre horas de estudio y nota final seg√∫n salud mental')
plt.xlabel('Horas de estudio por d√≠a')
plt.ylabel('Nota final')
plt.show()

"""Conclusi√≥n sobre la interacci√≥n entre horas de sue√±o y salud mental

El an√°lisis de regresi√≥n muestra que las horas de sue√±o no tienen un efecto significativo sobre la calificaci√≥n de salud mental (`mental_health_rating`). El coeficiente para `sleep_hours` es muy cercano a cero (-0.0151) y no es estad√≠sticamente significativo (p = 0.837), reflejando un ajuste nulo del modelo (R-cuadrado = 0.000). Esto indica que las horas de sue√±o, consideradas aisladamente, no predicen la salud mental en esta muestra.

En cuanto a la predicci√≥n del rendimiento acad√©mico (`exam_score`), el modelo que incluye horas de estudio diarias, grupos de salud mental y su interacci√≥n explica una proporci√≥n muy alta de la variabilidad en las notas (R-cuadrado = 0.778). Se observa que tanto un mayor nivel de salud mental como m√°s horas de estudio se asocian con un aumento significativo en la nota final. Sin embargo, las interacciones entre horas de estudio y grupos de salud mental no resultan significativas, lo que sugiere que el efecto positivo de estudiar m√°s horas sobre el rendimiento acad√©mico es consistente independientemente del nivel de salud mental.

En s√≠ntesis, aunque las horas de sue√±o no parecen afectar la salud mental, esta √∫ltima junto con las horas de estudio son variables clave para explicar el desempe√±o acad√©mico. La interacci√≥n entre horas de estudio y salud mental no modifica sustancialmente esta relaci√≥n en este conjunto de datos.

> Tener buena salud mental ayuda a que la relaci√≥n entre estudiar y rendimiento sea menos dependiente de aumentar mucho las horas, posiblemente porque esos estudiantes tienen mejores mecanismos de concentraci√≥n, gesti√≥n del estr√©s o eficiencia al estudiar.

### Interacci√≥n entre horas de ejercicio y salud mental
"""

df['exercise_frequency'] = pd.to_numeric(df['exercise_frequency'], errors='coerce')

# Modelo donde la variable dependiente es la salud mental
import statsmodels.formula.api as smf

model = smf.ols('mental_health_rating ~ exercise_frequency', data=df).fit()
print(model.summary())

import seaborn as sns
import matplotlib.pyplot as plt

sns.boxplot(x='exercise_frequency', y='mental_health_rating', data=df)
plt.title("Relaci√≥n entre ejercicio y salud mental")
plt.show()

import statsmodels.formula.api as smf
import pandas as pd

# Crear variable categ√≥rica para salud mental (si no est√° creada)
df['mental_health_group'] = pd.Categorical(df['mental_health_group'], categories=['Bajo', 'Medio', 'Alto'], ordered=True)

# Modelo con interacci√≥n entre ejercicio y salud mental
model_exercise = smf.ols('exam_score ~ exercise_frequency * mental_health_group', data=df).fit()

print(model_exercise.summary())

import seaborn as sns
import matplotlib.pyplot as plt

sns.set(style="whitegrid")
plt.figure(figsize=(10,6))

sns.lmplot(
    x='exercise_frequency',
    y='exam_score',
    hue='mental_health_group',
    data=df,
    height=6,
    aspect=1.5,
    palette='Set2',
    markers=['o', 's', 'D'],
    scatter_kws={'alpha':0.6}
)

plt.title('Relaci√≥n entre frecuencia de ejercicio y nota final seg√∫n salud mental')
plt.xlabel('Frecuencia de ejercicio')
plt.ylabel('Nota final')
plt.tight_layout()
plt.show()

"""Conclusi√≥n sobre la interacci√≥n entre frecuencia de ejercicio y salud mental

El an√°lisis de regresi√≥n lineal indica que la frecuencia de ejercicio no tiene un efecto significativo sobre la calificaci√≥n de salud mental (`mental_health_rating`). El coeficiente para `exercise_frequency` es pr√°cticamente cero (-0.0003) y con un valor p muy alto (0.994), reflejando un modelo sin poder explicativo (R-cuadrado = 0.000). Esto sugiere que la frecuencia con la que los estudiantes realizan ejercicio no est√° asociada con su salud mental en este conjunto de datos.

En relaci√≥n con el rendimiento acad√©mico (`exam_score`), el modelo que considera la frecuencia de ejercicio, los grupos de salud mental y su interacci√≥n explica una parte modesta de la variabilidad en las notas (R-cuadrado = 0.139). Se observa que algunas categor√≠as de frecuencia de ejercicio, espec√≠ficamente aquellas con mayor frecuencia (5 y 6 d√≠as), tienen un efecto positivo y significativo sobre el puntaje del examen, mientras que niveles bajos de ejercicio no muestran impacto significativo. Adem√°s, los niveles m√°s altos de salud mental tambi√©n se asocian con mejores resultados acad√©micos.

Sin embargo, las interacciones entre frecuencia de ejercicio y grupos de salud mental no resultan estad√≠sticamente significativas, lo que indica que el efecto del ejercicio sobre la nota final no var√≠a seg√∫n el nivel de salud mental del estudiante.

En resumen, aunque la frecuencia de ejercicio no se relaciona directamente con la salud mental, el ejercicio frecuente y un mejor estado de salud mental contribuyen positivamente al rendimiento acad√©mico, actuando de forma independiente en este contexto.

### Interacci√≥n entre calidad de dieta y salud mental
"""

import statsmodels.formula.api as smf

# Modelo lineal: salud mental en funci√≥n de calidad de la dieta
model = smf.ols('mental_health_rating ~ C(diet_quality)', data=df).fit()
print(model.summary())

import seaborn as sns
import matplotlib.pyplot as plt

sns.boxplot(x='diet_quality', y='mental_health_rating', data=df)
plt.title("Relaci√≥n entre calidad de la dieta y salud mental")
plt.xlabel("Calidad de la dieta")
plt.ylabel("Calificaci√≥n de salud mental")
plt.show()

# Modelo con interacci√≥n entre calidad de dieta y salud mental
model_diet = smf.ols('exam_score ~ diet_quality * mental_health_group', data=df).fit()

print(model_diet.summary())

plt.figure(figsize=(12,6))
sns.boxplot(x='diet_quality', y='exam_score', hue='mental_health_group', data=df, palette='Set3')
plt.title('Distribuci√≥n de notas seg√∫n calidad de dieta y salud mental')
plt.xlabel('Calidad de dieta')
plt.ylabel('Nota final')
plt.tight_layout()
plt.show()

"""Conclusi√≥n sobre la interacci√≥n entre calidad de dieta y salud mental

El modelo de regresi√≥n lineal para la calificaci√≥n de salud mental muestra que tener una calidad de dieta buena se asocia con un ligero aumento significativo en la salud mental percibida (coeficiente = 0.44, p = 0.029), aunque el efecto es peque√±o y el modelo explica muy poca variabilidad (R¬≤ = 0.005). La dieta pobre no muestra un efecto significativo respecto a la categor√≠a de referencia.

En cuanto al rendimiento acad√©mico (`exam_score`), la calidad de la dieta por s√≠ sola no es un predictor significativo del puntaje en el examen, con coeficientes no significativos tanto para la dieta buena como para la pobre. Por otro lado, los grupos de salud mental medio y alto s√≠ muestran efectos positivos y significativos sobre el rendimiento acad√©mico, lo que indica que un mejor estado de salud mental est√° asociado con mejores notas.

Las interacciones entre calidad de dieta y grupos de salud mental no resultan estad√≠sticamente significativas, sugiriendo que el impacto de la salud mental en el rendimiento acad√©mico no var√≠a seg√∫n la calidad de la dieta.

En resumen, aunque una mejor calidad de dieta se asocia ligeramente con mejor salud mental, esta relaci√≥n no se traslada directamente al rendimiento acad√©mico, donde la salud mental juega un papel m√°s relevante e independiente.

## Conclusiones y recomendaciones üìù

A partir del an√°lisis realizado, hemos identificado qu√© h√°bitos y factores personales parecen tener una influencia m√°s significativa en el rendimiento acad√©mico de los estudiantes, medido por la nota final del examen.

### ¬øQu√© h√°bitos parecen m√°s influyentes?

- **Horas de estudio por d√≠a:** Este es, sin duda, el factor m√°s determinante seg√∫n ambos modelos. El modelo de regresi√≥n lineal mostr√≥ un coeficiente alto y positivo, y el √°rbol de decisi√≥n lo identific√≥ como la variable con mayor importancia predictiva. Dedicar m√°s tiempo al estudio est√° fuertemente correlacionado con una nota final m√°s alta.

- **Salud mental:** El estado de salud mental autoevaluado tambi√©n tiene un impacto positivo y significativo en el rendimiento acad√©mico. Tanto el modelo lineal como el √°rbol de decisi√≥n mostraron que una mejor calificaci√≥n de salud mental se asocia con notas m√°s altas.

- **Asistencia a clases:** Aunque no apareci√≥ como la variable m√°s importante en el √°rbol de decisi√≥n, el modelo de regresi√≥n lineal le asign√≥ el coeficiente m√°s alto, sugiriendo que asistir a clases regularmente es un factor clave para obtener buenas notas.

- **Horas en redes sociales y Netflix:** Pasar mucho tiempo en redes sociales y viendo contenido en streaming se asocia con notas finales m√°s bajas, seg√∫n el modelo de regresi√≥n lineal. Estos h√°bitos parecen tener un efecto negativo en el rendimiento acad√©mico.

- **Frecuencia de ejercicio:** El modelo lineal sugiri√≥ que una mayor frecuencia de ejercicio puede estar asociada con notas ligeramente m√°s bajas, aunque la correlaci√≥n directa fue baja. El √°rbol de decisi√≥n le dio una importancia muy baja.

- **Horas de sue√±o:** Si bien se observ√≥ una ligera correlaci√≥n positiva, las horas de sue√±o no aparecieron como un predictor fuerte en ninguno de los modelos principales. Tampoco se encontr√≥ una interacci√≥n significativa con la salud mental en la predicci√≥n de la nota.

- **Calidad de dieta y trabajo a tiempo parcial:** Estas variables mostraron una influencia

### Recomendaciones

Bas√°ndonos en los patrones observados y la fuerza de la relaci√≥n, podemos ofrecer las siguientes recomendaciones generales (ten en cuenta que estas son estimaciones basadas en este conjunto de datos simulado y no deben tomarse como reglas exactas para todos):

1. **Prioriza tus horas de estudio:** Los datos sugieren fuertemente que aumentar el tiempo dedicado al estudio es la estrategia m√°s efectiva para mejorar tu nota. Aunque no podemos dar un porcentaje exacto sin un an√°lisis m√°s profundo por rangos, la tendencia indica que si aumentas tus horas de estudio por d√≠a, tu nota final tiene una alta probabilidad de mejorar significativamente.

2. **Cuida tu salud mental:** Mantener un buen estado de salud mental est√° asociado con un mejor rendimiento acad√©mico. Busca estrategias para gestionar el estr√©s y mantener tu bienestar emocional.

3. **Asiste a clases:** La asistencia a clases parece ser un predictor importante de √©xito. Procura no faltar a tus lecciones.

4. **Modera el uso de redes sociales y plataformas de streaming:** Limitar el tiempo que pasas en redes sociales y Netflix puede tener un impacto positivo en tu concentraci√≥n y, consecuentemente, en tu nota final.

5. **Encuentra un equilibrio con el ejercicio:** Si bien el ejercicio es importante para la salud, el an√°lisis no mostr√≥ una relaci√≥n clara y positiva con la nota final. Encuentra un equilibrio que te permita mantenerte saludable sin sacrificar tiempo crucial de estudio o descanso.

6. **Establece una rutina de sue√±o adecuada:** Aunque las horas de sue√±o no fueron el predictor m√°s fuerte, dormir lo suficiente es fundamental para la concentraci√≥n y el aprendizaje. Intenta mantener un horario de sue√±o regular.

**En resumen:** Para mejorar tu rendimiento acad√©mico, enf√≥cate principalmente en aumentar tus horas de estudio, cuidar tu salud mental y asegurar una buena asistencia a clases. Limitar el tiempo en redes sociales y streaming tambi√©n parece ser beneficioso.

## Ideas para expandir üöÄ

Aunque el an√°lisis realizado ofrece una visi√≥n inicial sobre c√≥mo ciertos h√°bitos influyen en la nota final de los estudiantes, existen varias oportunidades para ampliar y profundizar el estudio, con el fin de hacerlo m√°s realista, robusto y √∫til para la toma de decisiones.

**1. Incorporar datos longitudinales:**  
Actualmente, el dataset se basa en una instant√°nea temporal. Contar con datos recogidos a lo largo del tiempo permitir√≠a observar c√≥mo cambian los h√°bitos y su impacto en el rendimiento acad√©mico, ayudando a identificar tendencias, efectos acumulativos o periodos cr√≠ticos.

**2. A√±adir variables contextuales y sociodemogr√°ficas:**  
Variables como el entorno familiar, el nivel socioecon√≥mico, el acceso a recursos educativos, el tipo de instituci√≥n, o el apoyo psicol√≥gico podr√≠an aportar una comprensi√≥n m√°s profunda y realista del rendimiento acad√©mico y sus condicionantes.

**3. Implementar un dashboard interactivo:**  
Un dashboard din√°mico facilitar√≠a la exploraci√≥n de datos por parte de estudiantes, docentes y orientadores, permitiendo filtrar por variables espec√≠ficas, visualizar tendencias y detectar patrones personalizados que ayuden en la toma de decisiones individuales y colectivas.

**4. Aplicar t√©cnicas de clustering o segmentaci√≥n:**  
Agrupar estudiantes con h√°bitos y resultados similares mediante clustering podr√≠a ayudar a identificar perfiles o tipos de estudiantes con necesidades y comportamientos particulares, optimizando as√≠ la personalizaci√≥n de recomendaciones y estrategias educativas.

**5. Incluir modelos predictivos m√°s complejos y explicables:**  
Incorporar t√©cnicas como Random Forest, Gradient Boosting o redes neuronales, acompa√±adas de m√©todos explicativos como SHAP o LIME, permitir√≠a mejorar la precisi√≥n predictiva y entender mejor las contribuciones de cada h√°bito a la nota final.

**6. Evaluar interacciones m√°s complejas entre h√°bitos:**  
Explorar interacciones multifactoriales no lineales entre los h√°bitos, por ejemplo, c√≥mo la combinaci√≥n simult√°nea de ejercicio, alimentaci√≥n y horas de estudio influye en el rendimiento, para generar recomendaciones m√°s completas y realistas.

**7. Recoger y analizar datos cualitativos:**  
Complementar el an√°lisis cuantitativo con encuestas, entrevistas o diarios de h√°bitos permitir√≠a captar aspectos subjetivos y emocionales que influyen en la motivaci√≥n y rendimiento, no siempre evidentes en datos num√©ricos.

Estas ampliaciones y mejoras no solo enriquecer√≠an el an√°lisis, sino que tambi√©n lo acercar√≠an m√°s a las condiciones reales y complejas que enfrentan los estudiantes, permitiendo dise√±ar intervenciones educativas m√°s efectivas y personalizadas.
"""